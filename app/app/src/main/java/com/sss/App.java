/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.sss;

import com.sss.app.config.AppShutdownListener;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.boot.ApplicationArguments;
import org.springframework.boot.ApplicationRunner;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.data.jpa.repository.config.EnableJpaRepositories;
import org.springframework.web.cors.CorsConfiguration;
import org.springframework.web.cors.CorsConfigurationSource;
import org.springframework.web.cors.UrlBasedCorsConfigurationSource;

import java.util.List;

@SpringBootApplication
@EnableJpaRepositories
//@SpringBootApplication(exclude = { DataSourceAutoConfiguration.class, HibernateJpaAutoConfiguration.class,
//        DataSourceTransactionManagerAutoConfiguration.class })
//@EnableTransactionManagement
//@EnableJpaRepositories(basePackages ="com.sss.repository")
public class App implements ApplicationRunner {
    private static final Logger logger = LogManager.getLogger(App.class);

    public static void main(String[] args) {
        new SpringApplicationBuilder(App.class)
                .listeners(new AppShutdownListener())
                .run(args);
    }

    @Override
    public void run(ApplicationArguments args) throws Exception {
        logger.info("--------Application started!");
    }

    public CorsConfigurationSource corsConfigurationSource() {
        final CorsConfiguration configuration = new CorsConfiguration();
        configuration.setAllowedMethods(List.of("HEAD", "GET", "POST", "PUT", "PATCH", "DELETE"));
        configuration.setAllowCredentials(true);
        configuration.addAllowedOriginPattern("*");
        configuration.setAllowedHeaders(List.of("Authorization", "Cache-Control", "Content-Type"));
        final UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
        source.registerCorsConfiguration("/*", configuration);
        return source;
    }
}
